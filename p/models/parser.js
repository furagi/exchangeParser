// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter, Parser,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Parser = (function(_super) {
    __extends(Parser, _super);

    function Parser() {
      var http;
      http = require('http');
      this._get = http.get;
    }

    Parser.prototype.getRates = function(base, currencys) {};

    Parser.prototype._onGetDataError = function(err) {
      this.emit('error', err);
      return this._parse(null);
    };

    Parser.prototype._getData = function(url) {
      var err,
        _this = this;
      try {
        return this._get(url, function(res) {
          var body;
          body = '';
          res.on('end', function() {
            return _this._parse(body);
          });
          return res.on('data', function(chunk) {
            return body += chunk;
          });
        }).on('error', function(e) {
          return _this._onGetDataError(e.message);
        });
      } catch (_error) {
        err = _error;
        return this._onGetDataError(err);
      }
    };

    Parser.prototype._parse = function(data) {};

    Parser.prototype._onParseError = function(err) {
      var cur;
      this.emit('error', err);
      cur = {};
      return this.emit('end', cur);
    };

    return Parser;

  })(EventEmitter);

  exports.Parser = Parser;

}).call(this);
