// Generated by CoffeeScript 1.6.3
(function() {
  var OpenExchange, Parser,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Parser = require(__dirname + '/parser').Parser;

  OpenExchange = (function(_super) {
    __extends(OpenExchange, _super);

    function OpenExchange() {
      this.getRates = this.getLatest;
    }

    OpenExchange.prototype.getLatest = function(base, currencys, key, https) {
      var protocol, url;
      if (https == null) {
        https = false;
      }
      url = "http" + (https ? 's' : '') + "://openexchangerates.org/api/";
      protocol = void 0;
      if (https) {
        protocol = require('https');
      } else {
        protocol = require('http');
      }
      this._get = protocol.get;
      this._base = base;
      this._currencys = currencys;
      return this._getData(url + 'latest.json?app_id=' + key);
    };

    OpenExchange.prototype._parse = function(data) {
      var b, cost, cur, e, i, _i, _ref;
      try {
        data = JSON.parse(data);
      } catch (_error) {
        e = _error;
        this.emit('error', e);
        return;
      }
      if (data.error) {
        this.emit('error', data.description);
        return;
      }
      b = data.base;
      if (b !== this._base) {
        cost = data.rates[this._base];
        data.rates[b] = 1;
      }
      cur = {};
      for (i = _i = 0, _ref = this._currencys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        cur[this._currencys[i]] = data.rates[this._currencys[i]] / cost;
      }
      return this.emit('end', cur);
    };

    return OpenExchange;

  })(Parser);

  exports.OpenExchange = OpenExchange;

}).call(this);
